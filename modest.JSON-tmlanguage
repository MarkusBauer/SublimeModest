{
	"name": "Modest",
	"scopeName": "source.modest",
	"fileTypes": ["modest"],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment",
					"match": "//.*$"
				},
				{
					"name": "comment",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"typelist": {
			"patterns": [
				{
					"name": "constant.numeric.modest",
					"match": "\\((\\d+)\\s*(\\.\\.)\\s*(\\d+)\\)",
					"captures": {
					    "2": { "name": "keyword.source.dots" }
					}
				},
				{
					"match": "\\b(int|bool|real|float)\\b",
					"name": "storage.type.modest"
				}
			]
		},

		"actions": {
			"patterns": [
				{ "include": "#comments" },
				{
					"name": "updates",
					"begin": "({=)",
					"end": "(=})",
					"patterns": [
						{ "include": "#expressions" }
					],
					"captures": {
						"1": { "name": "string" },
						"2": { "name": "string" }
					}
				},
				{
					"name": "keyword.source.modest",
					"match": "::"
				},
				{
					"name": "support.function.modest.action",
					"match": "\\b(stop|abort|break)\\b"
				},
				{
					"name": "keyword.source.control.modest",
					"match": "\\b(when|alt|do|par|throw|try|catch|relabel|by|extend|hide|if|else|while|process|function)\\b"
				},
				{
					"name": "propertyrule",
					"begin": "\\bproperty\\b",
					"beginCaptures": {
						"0": { "name": "keyword.source.modest" }
					},
					"end" : ";",
					"patterns": [
						{
							"name": "keyword.source.modest",
							"match": "\\b(\\->|<>|\\[\\]|initial|deadlock|timelock)\\b"
						},
						{
							"name": "support.function.modest.inproperty", // I just like that color
							"match": "\\b(P|Pmax|Pmin|S(max|min)?|X|Xmax|Xmin|V|Vmax|Vmin|A|E|R|U|W|N)\\b"
						},
						{ "include": "#typelist" },
						{ "include": "#actions" }
					]
				},
				{
					"name": "keyword.source.modest",
					"comment": "keywords I don't know at the moment",
					"match": "\\b(clock|reward|var|patient|impatient|binary|broadcast|const|der|any|struct|datatype|delay|rate|palt|closed|open|urgent|invariant|return|restrict|option|property)\\b"
				},
			/*	
			// FUNCTION

			"true|false|stop|abort|action", "int", "real", "clock", "reward", "var", "bool", "patient", "impatient", "binary", "broadcast", "float", "exception", "const", "der", "any", 
			"struct", "datatype", "tau", "τ", "alt", "delay", "rate", "palt", "do", "break", "while", "par", "closed", "open", "when", "urgent", "invariant", "function", "if", "then", "else", 
			"return", "try", "throw", "catch", "process", "relabel", "by", "hide", "extend", "restrict", "option", "none", "null"

In addition, between "property" and the next ";", the following are keywords, too:

"->", "P", "Pmax", "Pmin", "S", "Smax", "Smin", "X", "Xmax", "Xmin", "V", "Vmax", "Vmin", "A", "E", "R", "U", "W", "N", "<>", "[]", "initial", "deadlock", "timelock"*/
				{
					"name": "constant.language.modest",
					"match": "\\b(tau|τ|none|null)\\b"
				},
				{ "include": "#expressions" }
			]
		},

		"expressions": {
			"patterns": [
				{
					"name": "keyword.source.operators.modest",
					"match": "[=\\+\\-\\*/<>!]=?",
					"comment": "Not documented at all, so let's see..."
				},
				{
					"name": "constant.numeric.literal",
					"match": "\\b(\\d+(\\.\\d+)?|true|false)\\b"
				}
			]
		}
	},

	"patterns": [
		{ "include": "#comments" },
		{
			"name": "keyword.source.dcl",
			"match": "\\b(action|exception)\\b",
			"comment": "declaration"
		},
		{ "include": "#typelist", "comment": "variable declaration" },
		{
			"name": "process",
			"begin": "\\s*(process|function)\\s*([A-Za-z0-9_]+)\\s*\\(",
			"end": "\\)",
			"beginCaptures": {
			    "1": { "name": "keyword.source.process" },
			    "2": { "name": "entity.name.function" }
			},
			"patterns": [{ "include": "#typelist" }
			],
			"comment": "process declaration"
		},

		{ "include": "#actions" }
	],
	"uuid": "ea086210-cd15-4bdd-bb68-00d06438e277"
}